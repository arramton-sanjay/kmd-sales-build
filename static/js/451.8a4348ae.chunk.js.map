{"version":3,"file":"static/js/451.8a4348ae.chunk.js","mappings":"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","sources":["views/pages/errors/Error404.js","services/transaction.js","services/account.js","views/components/Pagination.js","utils/Antd.js","views/pages/AccountTransaction.js","views/pages/Report.js","views/pages/Account.js","services/file.js","utils/UploadCSV.js","views/pages/Transaction.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Error404() {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\n        />\n    );\n}\n\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'transation';\n\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static save(data, params = {}) {\n        return axios.post(this.baseURL + \"/save\", data, { params });\n    }\n    static updateRemarks(data) {\n        return axios.post(this.baseURL + \"/update-remarks\", data);\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n    static saveFromCSVUrl(data, params = {}) {\n        return axios.post(this.baseURL + \"/csv-upload\", data, { params });\n    }\n    static checkPrevTransation(data, params = {}) {\n        return axios.post(this.baseURL + \"/check-prev-transation\", data, { params });\n    }\n\n    static listBillReport(data) {\n        return axios.get(this.baseURL + '/list-report', { params: data });\n    }\n\n    static listLedger(data) {\n        return axios.get(this.baseURL + '/list-ledger', { params: data });\n    }\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'account';\n\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static save(data, params = {}) {\n        return axios.post(this.baseURL + \"/save\", data, { params });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n}","import { Pagination, Tag } from 'antd';\nexport default function MyPagination(props) {\n    const { qData, setQData } = props;\n\n    const handleChange = (page, pp) => {\n        if (qData.limit !== pp) {\n            setQData({ ...qData, page: 1, limit: pp });\n        } else {\n            setQData({ ...qData, page: page });\n        }\n    }\n\n    const showTotal = () => {\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\n        let end = qData.page * qData.limit;\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\n    }\n    return (\n        <>\n            {\n                qData.total > 0\n                    ? <Pagination\n                        total={qData.total}\n                        showTotal={showTotal}\n                        pageSize={qData.limit}\n                        current={qData.page}\n                        onChange={handleChange}\n                        showSizeChanger={true}\n                    />\n                    : null\n            }\n        </>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState, forwardRef } from 'react';\nimport moment from 'moment';\nimport {\n    DatePicker,\n    Checkbox,\n    message,\n    Upload,\n    Modal,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nexport function AntdDatepicker(props) {\n    let {\n        format,\n        getFormat = 'YYYY-MM-DD',\n        inputReadOnly,\n        value,\n        defaultValue,\n        onChange,\n        disablePastDate = false,\n        disableUpcomingDate = false,\n        ...rest\n    } = props;\n\n\n    let otherProps = {};\n    if (typeof value !== \"undefined\") {\n        // otherProps.value = moment(value).format(format || 'DD MMM YYYY') ? moment(new Date(value)) : null\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\n    }\n    if (typeof defaultValue !== \"undefined\") {\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\n    }\n    if (typeof onChange !== \"undefined\") {\n        otherProps.onChange = (dt) => {\n            onChange(dt ? moment(dt).format(getFormat) : null);\n        }\n    }\n    useEffect(() => {\n        onChange(moment(value).format(getFormat))\n    }, [])\n\n    return (\n        <DatePicker\n            format={format || 'DD MMM YYYY'}\n            inputReadOnly={inputReadOnly || true}\n            disabledDate={(current) => {\n                let customDate = moment().format(\"YYYY-MM-DD\");\n                if (disablePastDate) {\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\n                }\n                if (disableUpcomingDate) {\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\n                }\n            }}\n            {...otherProps}\n            {...rest}\n            style={{ width: '100%' }}\n        />\n    )\n}\n\nexport function MultiChechBox(props) {\n    const { col = 3 } = props;\n    const type = typeof props.value === 'object' ? 'array' : 'string';\n\n    let [values, setValues] = useState();\n    let [options, setOptions] = useState([]);\n\n    const handleChange = (e) => {\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\n        if (e.target.checked) {\n            values.push(val)\n            setValues([...values]);\n        } else {\n            if (values.indexOf(val) > -1) {\n                values.splice(values.indexOf(val), 1);\n                setValues([...values])\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (type === 'string') {\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\n            setValues([...values]);\n        } else {\n            setValues([...props.value]);\n        }\n    }, [props.value]);\n\n    useEffect(() => {\n        let opts = props.options.map((v, i) => {\n            if (v.value) {\n                return { value: v.value * 1, label: v.label }\n            } else if (v.id) {\n                return { value: v.id * 1, label: v.name || v.title || v.label }\n            } else if (v._id) {\n                return { value: v._id + '', label: v.name || v.title || v.label }\n            }\n            return null;\n        });\n        setOptions(opts);\n    }, [props.options]);\n\n    useEffect(() => {\n        // if (type === 'string') {\n        //     props.onChange(values?.join());\n        // } else {\n        props.onChange(values)\n        // }\n    }, [(values || []).join(\",\")])\n\n    return (\n        <div className=\"row mingap\" >\n            {\n                options.map((v, i) => (\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\n                        <div className=\"border p-1\">\n                            <Checkbox\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\n                                onChange={handleChange}\n                                className=\"mx-0 mr15\"\n                            >\n                                {v.label}\n                            </Checkbox>\n                        </div>\n                    </div>\n                ))\n            }\n        </div>\n\n    );\n}\n\nexport function AntdMsg($msg, $type = 'success') {\n    if ($msg) {\n        if ($type === 'success')\n            message.success($msg);\n        if ($type === 'error')\n            message.error($msg);\n        if ($type === 'warning')\n            message.warning($msg);\n    }\n};\n\nfunction getBase64(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = error => reject(error);\n    });\n}\n\nconst UploadImage = forwardRef((props, ref) => {\n    const { fileCount } = props;\n    const fileRef = ref;\n    let { files } = props;\n    useEffect(() => {\n        setFileList(files)\n    }, [files])\n\n    if (files.length) {\n        files = files?.map((v, i) => {\n            return { uid: i, url: v.url, status: 'done', name: v.name };\n        });\n    } else {\n        files = [];\n    }\n\n\n    const [fileList, setFileList] = useState(files);\n\n    const dummyRequest = ({ file, onSuccess }) => {\n        setTimeout(() => {\n            onSuccess(\"ok\");\n            if (!fileRef.current.uploadingFiles) {\n                fileRef.current.uploadingFiles = [];\n            }\n            fileRef.current.uploadingFiles?.push(file);\n        }, 0);\n    };\n    const [previewVisible, setPreviewVisible] = useState(false);\n    const [previewImage, setPreviewImage] = useState('');\n    const [previewTitle, setPreviewTitle] = useState('');\n\n    const handleCancel = () => setPreviewVisible(false);\n\n    const handlePreview = async file => {\n        if (!file.url && !file.preview) {\n            file.preview = await getBase64(file.originFileObj);\n        }\n        setPreviewVisible(true);\n        setPreviewImage(file.url || file.preview);\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n    };\n\n    const handleChange = ({ fileList: newFileList }) => {\n        setFileList(newFileList);\n    };\n\n    const uploadButton = (\n        <div>\n            <PlusOutlined />\n            <div style={{ marginTop: 8 }}>Upload</div>\n        </div>\n    );\n    return (\n        <>\n            <Upload\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                listType=\"picture-card\"\n                customRequest={dummyRequest}\n                fileList={fileList}\n                onPreview={handlePreview}\n                onChange={(value) => {\n                    if (value.file.status === 'removed' || value.file.status) {\n                        handleChange(value)\n                    }\n                }}\n                beforeUpload={\n                    (file) => {\n                        if (!file.type.includes('image/')) {\n                            message.error('Invalid file type');\n                            return false\n                        }\n                    }\n                }\n                onRemove={(e) => {\n                    if (!fileRef.current.deletingFiles) {\n                        fileRef.current.deletingFiles = [];\n                    }\n                    if (!e.thumbUrl) {\n                        fileRef.current.deletingFiles?.push(e);\n                    } else {\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\n                    }\n                }}\n            >\n                {fileList.length >= fileCount ? null : uploadButton}\n            </Upload>\n            <Modal\n                open={previewVisible}\n                title={previewTitle}\n                footer={null}\n                onCancel={handleCancel}\n            >\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\n            </Modal>\n        </>\n    );\n})\n\nexport default UploadImage;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/transaction';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport moment from 'moment';\nimport dayjs from 'dayjs';\n\nexport default function AccountTransaction({ accountId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, accountId });\n    const addNewModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: '#',\n            width: 40,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            render: v => moment(v).format('DD MMM YYYY')\n        },\n        {\n            title: 'Bill Number',\n            dataIndex: 'billNumber',\n            width: 150,\n        },\n        {\n            title: 'Debit',\n            dataIndex: 'amount',\n            width: 150,\n            render: (v, row) => row.transactionType === 'debit' ? v.toFixed(2) : ''\n        },\n        {\n            title: 'Credit',\n            dataIndex: 'amount',\n            width: 150,\n            render: (v, row) => row.transactionType === 'credit' ? v.toFixed(2) : ''\n        },\n        {\n            title: 'Balance',\n            dataIndex: 'previousCreditAmount',\n            width: 150,\n            // render: (v, row) => ((row.previousCreditAmount - row.previousDebitAmount) * -1).toFixed(2)\n            render: (v, row) => {\n                const bal = ((row.previousCreditAmount - row.previousDebitAmount) * -1).toFixed(2);\n                return bal > 20 ? <Tag color=\"red\"><b>{bal}</b></Tag> : bal < -20 ? <Tag color=\"blue\"><b>{bal}</b></Tag> : <Tag color=\"green\"><b>{bal}</b></Tag>;\n            }\n        },\n        {\n            title: 'Ledger',\n            dataIndex: 'accountRecievable',\n            width: 150,\n            render: (v, row) => row.transactionType === 'debit' ? 'Sale' : v\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    {\n                        <Popconfirm\n                            title=\"Are you sure to delete this data?\"\n                            onConfirm={() => { deleteData(row._id); }}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                        </Popconfirm>\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.listLedger(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        size: 'small',\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Transactions</Typography.Title>\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, accountId }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e?.[0]) : null, endTime: e?.[1] ? new Date(e?.[1]) : null }) }} />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={10}>\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                        </Form.Item>\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n}\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, accountId } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => {\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { accountId, date: new Date() }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            console.log(res.data);\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id, open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[0, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Transaction Type\" required>\n                                    <Select value={data.transactionType} onChange={v => { handleChange({ transactionType: v }) }} >\n                                        <Select.Option value={\"credit\"} >Bill</Select.Option>\n                                        <Select.Option value={\"debit\"} >Sell</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Amount\" required>\n                                    <Input placeholder='Enter Amount' type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Bill Number\" required>\n                                    <Input placeholder='Enter bill number' value={data.billNumber} onChange={(e) => handleChange({ billNumber: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            {\n                                data.transactionType === 'credit'\n                                    ? <Col span={24}>\n                                        <Form.Item label=\"Account Recievable\" required>\n                                            <Input value={data.accountRecievable} onChange={(e) => handleChange({ accountRecievable: e.target.value })}></Input>\n                                        </Form.Item>\n                                    </Col>\n                                    : null\n                            }\n                            {\n                                data.transactionType === 'debit'\n                                    ? <Col span={24}>\n                                        <Form.Item label=\"Type\" required>\n                                            <Input placeholder='Enter your type' value={data.type} onChange={(e) => handleChange({ type: e.target.value })}></Input>\n                                        </Form.Item>\n                                    </Col>\n                                    : null\n                            }\n                            <Col span={24}>\n                                <Form.Item label=\"Date\" required>\n                                    <DatePicker\n                                        format='DD MMM YYYY'\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\n                                        className=\"w-100\"\n                                    />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Modal, Typography, Select, DatePicker, Tag, Input } from 'antd';\nimport { EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/transaction';\nimport serviceAccount from '../../services/account';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport moment from 'moment';\nimport AccountTransaction from './AccountTransaction';\n\nexport default function BillingReport({ transactionType = \"credit\", dataType }) {\n\tconst [data, setData] = useState([]);\n\tconst [loading, setLoading] = useState(false);\n\tconst [accounts, setAccounts] = useState([]);\n\tconst [qData, setQData] = useState({ page: 1, limit: 20, transactionType, dataType });\n\tconst addNewModalRef = useRef();\n\tconst transactionModalRef = useRef();\n\n\tconst columns = [\n\t\t{\n\t\t\ttitle: '#',\n\t\t\twidth: 40,\n\t\t\trender: (v, row, i) => <b>{i + 1}</b>\n\t\t},\n\t\t{\n\t\t\ttitle: 'Account Name',\n\t\t\tdataIndex: 'accountDetails',\n\t\t\twidth: 200,\n\t\t\trender: (data) => data?.name\n\t\t},\n\t\t{\n\t\t\ttitle: 'Bank',\n\t\t\twidth: 100,\n\t\t\tdataIndex: 'accountRecievable',\n\t\t\thidden: dataType === 'sale'\n\t\t},\n\t\t{\n\t\t\ttitle: 'Date',\n\t\t\tdataIndex: 'date',\n\t\t\twidth: 100,\n\t\t\trender: v => moment(v).format('DD MMM YYYY')\n\t\t},\n\t\t{\n\t\t\ttitle: dataType === 'sale' ? 'Bill Number' : 'Receipt No.',\n\t\t\tdataIndex: 'billNumber',\n\t\t\twidth: 100,\n\t\t},\n\t\t{\n\t\t\ttitle: dataType === 'sale' ? 'Sale Amount' : 'Receipt Amount',\n\t\t\tdataIndex: 'amount',\n\t\t\twidth: 120,\n\t\t\trender: v => <b>{v.toFixed(2)}</b>\n\t\t},\n\t\t{\n\t\t\ttitle: 'Invoice No',\n\t\t\tdataIndex: 'previousCreditTransactions',\n\t\t\twidth: 150,\n\t\t\trender: (v) => v?.[0]?.billNumber,\n\t\t\thidden: dataType === 'sale'\n\t\t},\n\t\t\n\t\t{\n\t\t\ttitle: dataType === 'sale' ? 'Amount Received' : 'Sale Amount',\n\t\t\tdataIndex: 'previousCreditTransactions',\n\t\t\twidth: 100,\n\t\t\trender: (v) => (v?.reduce((acc, cv) => acc + cv.amount, 0)).toFixed(2)\n\t\t},\n\t\t{\n\t\t\ttitle: 'Difference',\n\t\t\tdataIndex: 'previousCreditTransactions',\n\t\t\twidth: 90,\n\t\t\trender: (v, r) => (r.amount - v?.reduce((acc, cv) => acc + cv.amount, 0)).toFixed(2)\n\t\t},\n\t\t{\n\t\t\ttitle: 'Balance',\n\t\t\tdataIndex: 'balance',\n\t\t\twidth: 90,\n\t\t\trender: (v, row) => {\n\t\t\t\tconst bal = v.toFixed(2) * -1;\n\t\t\t\treturn bal > 20 ? <Tag color=\"red\"><b>{bal}</b></Tag> : bal < -20 ? <Tag color=\"blue\"><b>{bal}</b></Tag> : <Tag color=\"green\"><b>{bal}</b></Tag>;\n\t\t\t}\n\t\t},\n\t\t// {\n\t\t// \ttitle: 'Balance',\n\t\t// \tdataIndex: 'previousCreditAmount',\n\t\t// \twidth: 150,\n\t\t// \trender: (v, row) => {\n\t\t// \t\tconst bal = ((row.previousCreditAmount - row.previousDebitAmount ) * -1).toFixed(2);\n\t\t// \t\treturn bal > 20 ? <Tag color=\"red\"><b>{bal}</b></Tag> : bal < -20 ? <Tag color=\"blue\"><b>{bal}</b></Tag> : <Tag color=\"green\"><b>{bal}</b></Tag>;\n\t\t// \t}\n\t\t// },\n\t\t{\n\t\t\ttitle: 'Remorks',\n\t\t\tdataIndex: '_id',\n\t\t\twidth: 200,\n\t\t\trender: (value, row) => {\n\t\t\t\treturn <>\n\t\t\t\t\t<Typography.Paragraph\n\t\t\t\t\t\tstyle={{ marginBottom: '0px' }}\n\t\t\t\t\t\teditable={{\n\t\t\t\t\t\t\ttooltip: 'Click to edit remarks',\n\t\t\t\t\t\t\tonChange: (remarks) => {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tservice.updateRemarks({ _id: row._id, comment: remarks }).then(res => {\n\t\t\t\t\t\t\t\t\t\tAntdMsg('Remarks updated');\n\t\t\t\t\t\t\t\t\t\tsetData(data.map(v => {\n\t\t\t\t\t\t\t\t\t\t\tif (v._id === row._id) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn ({ ...v, comment: remarks });\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\treturn v;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{row.comment}\n\t\t\t\t\t</Typography.Paragraph>\n\t\t\t\t</>\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\ttitle: 'Ledger',\n\t\t\tdataIndex: '_id',\n\t\t\twidth: 80,\n\t\t\trender: (v, row) => <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm(row.accountId) }} />\n\t\t},\n\t].filter(item => !item.hidden);\n\n\tfunction list() {\n\t\tsetLoading(true);\n\t\tservice.listBillReport(qData).then(res => {\n\t\t\tsetData(res.data?.map((v, i) => ({ ...v, key: v.accountId + i })));\n\t\t\tsetQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n\t\t}).catch(err => { }).finally(() => {\n\t\t\tsetLoading(false);\n\t\t});\n\t}\n\n\tconst deleteData = (id) => {\n\t\tservice.delete(id).then(res => {\n\t\t\tAntdMsg(res.message);\n\t\t\tlist();\n\t\t}).catch(err => {\n\t\t\tAntdMsg(err.message, 'error');\n\t\t})\n\t}\n\n\tconst tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n\ttableColumns[0].fixed = true;\n\ttableColumns[tableColumns.length - 1].fixed = 'right';\n\n\tconst tableProps = {\n\t\tbordered: true,\n\t\tloading,\n\t\tsize: 'small',\n\t\ttitle: () => <Search {...{ addNewModalRef, deleteData, qData, setQData, list, accounts }} />,\n\t\tshowHeader: true,\n\t\tfooter: () => <Pagination {...{ qData, setQData }} />,\n\t\ttableLayout: undefined,\n\t};\n\n\tuseEffect(() => {\n\t\tlist();\n\t}, [qData.page, qData.limit, qData.transactionType, qData.dataType]);\n\n\tuseEffect(() => {\n\t\tsetQData({ ...qData, transactionType, dataType });\n\t}, [transactionType, dataType]);\n\n\n\tuseEffect(() => {\n\t\tserviceAccount.list({ isAll: 1, dataType })\n\t\t\t.then(res => {\n\t\t\t\tsetAccounts(res.data);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tif (typeof err.message === 'object') {\n\t\t\t\t\tlet dt = err.message[Object.keys(err.message)[0]];\n\t\t\t\t\tAntdMsg(dt, 'error');\n\t\t\t\t} else {\n\t\t\t\t\tAntdMsg(err.message, 'error');\n\t\t\t\t}\n\t\t\t})\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Typography.Title level={5} style={{ margin: 0 }}>List of Transactions</Typography.Title>\n\n\t\t\t<Table\n\t\t\t\t{...tableProps}\n\t\t\t\tpagination={{ position: ['none'], pageSize: qData.limit }}\n\t\t\t\tcolumns={tableColumns}\n\t\t\t\t// dataSource={dataSource}\n\t\t\t\tdataSource={data.length ? data : []}\n\t\t\t\tscroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n\t\t\t\texpandable={{\n\t\t\t\t\trowExpandable: (record) => true,\n\t\t\t\t\texpandedRowRender: (record) => (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div style={{ display: 'flex', flexDirection: 'row-reverse' }} >\n\t\t\t\t\t\t\t\t<Table\n\t\t\t\t\t\t\t\t\t// width={300}\n\t\t\t\t\t\t\t\t\tbordered\n\t\t\t\t\t\t\t\t\t// style={{width: '500px'}}\n\t\t\t\t\t\t\t\t\tpagination={false}\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tdataSource={[\n\t\t\t\t\t\t\t\t\t\t...record.previousCreditTransactions,\n\t\t\t\t\t\t\t\t\t\t// ...record.previousDebitTransactions,\n\t\t\t\t\t\t\t\t\t\t{ date: 'Total', transactionType: 'total', key: 'iiii' },\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\tcolumns={[\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Date',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'date',\n\t\t\t\t\t\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\t\t\t\t\trender: v => v !== 'Total' ? moment(v).format('DD MMM YYYY') : <b>Total</b>\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Bill',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'amount',\n\t\t\t\t\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\t\t\t\t\talign: 'right',\n\t\t\t\t\t\t\t\t\t\t\trender: (v, row) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (['credit', 'debit'].includes(row.transactionType)) {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn v.toFixed(2);\n\t\t\t\t\t\t\t\t\t\t\t\t} else if (row.date === 'Total') {\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn <b>{(record.previousCreditTransactions?.reduce((acc, cv) => acc + cv.amount, 0)).toFixed(2)}</b>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\ttitle: 'Account',\n\t\t\t\t\t\t\t\t\t\t\tdataIndex: 'accountRecievable',\n\t\t\t\t\t\t\t\t\t\t\talign: 'left',\n\t\t\t\t\t\t\t\t\t\t\twidth: 200,\n\t\t\t\t\t\t\t\t\t\t\trender: v => dataType === 'sale' ? v : 'Sale'\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</>\n\t\t\t\t\t)\n\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<AddForm ref={addNewModalRef} {...{ list, accounts }} />\n\t\t\t<TransactionModal ref={transactionModalRef} />\n\t\t</>\n\t);\n};\n\nfunction Search({ addNewModalRef, qData, setQData, list, accounts }) {\n\n\treturn (\n\t\t<Form onSubmitCapture={list} className=\"search-form\">\n\t\t\t<Row gutter={[12, 2]}>\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tplaceholder=\"Choose a account\"\n\t\t\t\t\t\t\tshowSearch\n\t\t\t\t\t\t\tvalue={qData.accountId}\n\t\t\t\t\t\t\tonChange={v => { setQData({ ...qData, accountId: v }) }}\n\t\t\t\t\t\t\tallowClear\n\t\t\t\t\t\t\toptionFilterProp=\"children\"\n\t\t\t\t\t\t\tfilterOption={(input, option) =>\n\t\t\t\t\t\t\t\t(option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toptions={accounts?.map(v => ({ label: v.name, value: v._id }))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={4}>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startDate: e?.[0] ? new Date(e?.[0]) : null, endDate: e?.[1] ? new Date(e?.[1]) : null }) }} />\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={3}>\n\t\t\t\t\t<Form.Item style={{ marginBottom: 0 }}>\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" onClick={e => { console.log('clicked', qData); }}>Search</Button>\n\t\t\t\t\t</Form.Item>\n\t\t\t\t</Col>\n\t\t\t\t<Col span={10}>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Form>\n\t);\n}\n\nconst AddForm = forwardRef((props, ref) => {\n\tconst [open, setOpen] = useState(false);\n\n\n\tuseImperativeHandle(ref, () => ({\n\t\topenForm(dt) {\n\t\t\tsetOpen(true);\n\t\t}\n\t}));\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\ttitle={'Report Details'}\n\t\t\t\tstyle={{ top: 20 }}\n\t\t\t\topen={open}\n\t\t\t\tokText=\"Save\"\n\t\t\t\t// onOk={save}\n\t\t\t\t// okButtonProps={{ disabled: ajxRequesting }}\n\t\t\t\tonCancel={() => { setOpen(false); }}\n\t\t\t\t// destroyOnClose\n\t\t\t\tmaskClosable={false}\n\t\t\t\twidth={400}\n\t\t\t\tclassName=\"app-modal-body-overflow\"\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t</Modal>\n\t\t</>\n\t);\n});\n\n\nconst TransactionModal = forwardRef((props, ref) => {\n\tconst [open, setOpen] = useState(false);\n\tconst [data, setData] = useState({ aspect: 1 });\n\n\tuseImperativeHandle(ref, () => ({\n\t\topenForm(dt) {\n\t\t\tsetOpen(true);\n\t\t\tsetData(dt);\n\t\t}\n\t}));\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tstyle={{ top: 20 }}\n\t\t\t\topen={open}\n\t\t\t\tokText=\"Save\"\n\t\t\t\tonCancel={() => { setOpen(false); }}\n\t\t\t\tmaskClosable={false}\n\t\t\t\twidth={1600}\n\t\t\t\tdestroyOnClose\n\t\t\t\tclassName=\"app-modal-body-overflow\"\n\t\t\t\tfooter={null}\n\t\t\t>\n\t\t\t\t<AccountTransaction accountId={data} />\n\t\t\t</Modal>\n\t\t</>\n\t);\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/account';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport AccountTransaction from './AccountTransaction';\n\nexport default function Account({ dataType = \"sale\" }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, dataType });\n    const addNewModalRef = useRef();\n    const transactionModalRef = useRef();\n\n\n    const columns = [\n        {\n            title: '#',\n            width: 44,\n            render: (v, row, i) => <b>{i + 1}</b>\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            // width: 200,\n        },\n        {\n            title: 'Initial Amount',\n            dataIndex: 'initialAmount',\n            width: 150,\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: (_, row) => {\n                if (row.status === \"opened\") {\n                    return <Tag color='green'>Opened</Tag>\n                } else {\n                    return <Tag color='red'>Closed</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 110,\n            render: (v, row) => {\n                return <>\n                    {\n                        <Popconfirm\n                            title=\"Are you sure to delete this Account data?\"\n                            onConfirm={() => { deleteData(row._id); }}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                        </Popconfirm>\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} style={{ marginRight: \"4px\" }} />\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EyeOutlined />} onClick={() => { transactionModalRef.current.openForm(row._id) }} />\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    useEffect(() => {\n        setQData({ ...qData, dataType });\n    }, [dataType]);\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ margin: 0 }}>List of  Accounts</Typography.Title>\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, dataType }} />\n            <TransactionModal ref={transactionModalRef} />\n\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder='Search by name' onChange={(e) => { setQData({ ...qData, key: e.target.value }) }} />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                        </Form.Item>\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected Data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, dataType } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    const handleChange = (value) => { setData({ ...data, ...value }); }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            setData(res.data || {});\n\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data, { dataType }).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Account Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[0, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder='Enter Name' value={data.name} onChange={(e) => handleChange({ name: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Initial Amount\" required>\n                                    <Input type='number' defaultValue={0} value={data.initialAmount} onChange={(e) => handleChange({ initialAmount: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\n                                        <Select.Option value=\"opened\">Opened</Select.Option>\n                                        <Select.Option value=\"closed\">Closed</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\n\nconst TransactionModal = forwardRef((props, ref) => {\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt);\n        }\n    }));\n    return (\n        <>\n            <Modal\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={1600}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={null}\n            >\n                <AccountTransaction accountId={data} />\n            </Modal>\n        </>\n    );\n});\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'file';\n\n    static get(url) {\n        return axios.get(\"../\"+  url);\n    }\n\n    static save(data, config) {\n        return axios.post(this.baseURL + \"/save\", data, config);\n    }\n    static remove(data) {\n        return axios.post(this.baseURL + \"/remove\", data);\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Upload, Button } from \"antd\";\nimport { UploadOutlined } from '@ant-design/icons';\n\nimport fileService from \"../services/file\";\nimport React from \"react\";\n\nexport default function UploadAudio({ fileList, setFileList, count = 1, disabled = false }) {\n    const uploadImage = async options => {\n        const { onSuccess, onError, file, onProgress } = options;\n\n        const fmData = new FormData();\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\n        fmData.append(\"file\", file);\n        try {\n            fileService.save(fmData, config).then(res => {\n                onSuccess(\"Ok\");\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\n            })\n        } catch (err) {\n            onError({ err });\n        }\n    };\n\n    const handleOnChange = ({ file, fl }) => {\n        if (typeof fl !== typeof []) {\n            fl = [];\n        }\n        setFileList(fl);\n\n    };\n    const handleRemove = (file) => {\n        fileService.remove({ uid: file.uid }).then(res => {\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\n        })\n    };\n\n    return <Upload\n        accept=\"text/csv\"\n        customRequest={uploadImage}\n        onChange={handleOnChange}\n        onRemove={handleRemove}\n        listType=\"picture\"\n        fileList={fileList}\n        className=\"image-upload-grid\"\n        disabled={disabled}\n        onPreview={(file) => {\n            return fetch(file.url, {\n                method: 'GET',\n            })\n                .then(res => res.json())\n                .then(({ thumbnail }) => {\n                    return thumbnail;\n                });\n        }}\n    >\n        {\n            fileList?.length >= count\n                ? null\n                : <Button icon={<UploadOutlined />} type=\"dashed\" danger style={{ margin: 30, width: \"134%\"}}>Upload CSV File</Button>\n        }\n    </Upload >\n\n};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Input, Row, Col, Popconfirm, Modal, Spin, Typography, Select, DatePicker, message, Timeline, Tag } from 'antd';\nimport { PlusOutlined, DeleteOutlined, EditOutlined, LoadingOutlined, UploadOutlined, ExclamationCircleFilled } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport service from '../../services/transaction';\nimport serviceAccount from '../../services/account';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\nimport moment from 'moment';\nimport UploadCSV from '../../utils/UploadCSV';\nimport dayjs from 'dayjs';\n\nexport default function Transaction({ transactionType = \"credit\", dataType = \"sale\" }) {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [accounts, setAccounts] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, transactionType, dataType });\n    const addNewModalRef = useRef();\n    const uploadCsvModalRef = useRef();\n\n    const columns = [\n        {\n            title: 'Account Name',\n            dataIndex: 'accountDetail',\n            render: (data) => data?.name\n        },\n        {\n            title: 'Receivable Account',\n            dataIndex: 'accountRecievable',\n            width: 250,\n            hidden: transactionType === 'debit'\n        },\n        {\n            title: 'Date',\n            dataIndex: 'date',\n            width: 150,\n            render: v => moment(v).format('DD MMM YYYY')\n        },\n        {\n            title: 'Amount',\n            dataIndex: 'amount',\n            width: 150,\n        },\n        {\n            title: 'Bill Number',\n            dataIndex: 'billNumber',\n            width: 150,\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    {\n                        <Popconfirm\n                            title=\"Are you sure to delete this Account data?\"\n                            onConfirm={() => { deleteData(row._id); }}\n                            okText=\"Yes\"\n                            cancelText=\"No\"\n                        >\n                            <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                        </Popconfirm>\n                    }\n                    {\n                        <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                    }\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        service.list(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        service.delete(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, uploadCsvModalRef, selected, deleteData, qData, setQData, list, accounts }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit, qData.transactionType, qData.dataType]);\n\n\n    useEffect(() => {\n        serviceAccount.list({ isAll: 1, dataType })\n            .then(res => {\n                setAccounts(res.data);\n            })\n            .catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            })\n    }, []);\n\n    useEffect(() => {\n        setQData({ ...qData, transactionType, dataType });\n    }, [transactionType, dataType]);\n\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ margin: 0 }}>List of {transactionType === 'debit' ? 'Sale' : 'Receipt'} Transactions</Typography.Title>\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, accounts, transactionType, dataType }} />\n            <UploadCsvModal ref={uploadCsvModalRef} transactionType={transactionType} dataType={dataType} list={list} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, uploadCsvModalRef, selected, deleteData, qData, setQData, list, accounts }) {\n\n    const [accountList, setAccountList] = useState([]);\n    const onChange = (v, key) => {\n        qData[key] = v;\n        if (v === undefined) {\n            qData[key] = \"\";\n            list()\n        }\n\n    }\n\n    useEffect(() => {\n        const acc = accounts?.map((item) => (\n            {\n                label: item.name,\n                value: item._id,\n            }\n\n        ))\n        setAccountList(acc)\n    }, [accounts])\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select\n                            showSearch\n                            allowClear\n                            placeholder=\"Select an Account\"\n                            optionFilterProp=\"children\"\n                            onChange={(e) => onChange(e, \"accountId\")}\n                            filterOption={(input, option) =>\n                                (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n                            }\n                            options={accountList}\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <DatePicker.RangePicker format='DD MMM YYYY' onChange={(e) => { setQData({ ...qData, startTime: e?.[0] ? new Date(e[0]) : null, endTime: e?.[1] ? new Date(e[1]) : null }) }} />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={10}>\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                            <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                        </Form.Item>\n                    }\n                    {\n                        <Form.Item style={{ marginBottom: 0, float: 'right', marginRight: \"1rem\" }}>\n                            <Button type=\"primary\" icon={<UploadOutlined />} onClick={() => { uploadCsvModalRef.current.openForm() }}>Upload File (CSV)</Button>\n                        </Form.Item>\n                    }\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected Data?\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n}\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, accounts, transactionType, dataType } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n\n    const handleChange = (value) => {\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n    }\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { transactionType, dataType }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        service.detail(data._id).then(res => {\n            setData(res.data || {});\n\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        service.save(data, { dataType }).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        }\n    }, [open]);\n\n    const [accountList, setAccountList] = useState([]);\n\n\n    useEffect(() => {\n        const acc = accounts?.map((item) => (\n            {\n                label: item.name,\n                value: item._id,\n            }\n\n        ))\n        setAccountList(acc)\n    }, [accounts])\n\n\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Transaction Data'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                // destroyOnClose\n                maskClosable={false}\n                width={500}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[0, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Account Id\" required>\n                                    <Select\n                                        showSearch\n                                        allowClear\n                                        placeholder=\"Select an Account\"\n                                        optionFilterProp=\"children\"\n                                        onChange={v => { handleChange({ accountId: v }) }}\n                                        filterOption={(input, option) =>\n                                            (option?.label ?? '').toLowerCase().includes(input.toLowerCase())\n                                        }\n                                        options={accountList}\n                                    />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Amount\" required>\n                                    <Input placeholder='Enter Amount' type=\"number\" min={0} value={data.amount} onChange={(e) => handleChange({ amount: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Bill Number\" required>\n                                    <Input placeholder='Enter bill number' value={data.billNumber} onChange={(e) => handleChange({ billNumber: e.target.value })}></Input>\n                                </Form.Item>\n                            </Col>\n                            {\n                                data.transactionType === 'credit'\n                                    ? <Col span={24}>\n                                        <Form.Item label=\"Account Recievable\" required>\n                                            <Input value={data.accountRecievable} onChange={(e) => handleChange({ accountRecievable: e.target.value })}></Input>\n                                        </Form.Item>\n                                    </Col>\n                                    : null\n                            }\n                            {\n                                data.transactionType === 'debit'\n                                    ? <Col span={24}>\n                                        <Form.Item label=\"Type\" required>\n                                            <Input placeholder='Enter your type' value={data.type} onChange={(e) => handleChange({ type: e.target.value })}></Input>\n                                        </Form.Item>\n                                    </Col>\n                                    : null\n                            }\n                            <Col span={24}>\n                                <Form.Item label=\"Date\" required>\n                                    <DatePicker\n                                        format='DD MMM YYYY'\n                                        onChange={(v) => { handleChange({ date: new Date(v) }) }}\n                                        value={dayjs(moment(data.date).format('YYYY-MM-DD'), 'YYYY-MM-DD')}\n                                        className=\"w-100\"\n                                    />\n                                </Form.Item>\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Spin>\n\n            </Modal>\n        </>\n    );\n});\n\nconst UploadCsvModal = forwardRef((props, ref) => {\n    const { list, transactionType, dataType } = props;\n    const [open, setOpen] = useState(false);\n    const [fileList, setFileList] = useState([]);\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [confirmDeletion, setConfirmDeletion] = useState(false);\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setFileList([]);\n        }\n    }));\n\n    const save = () => {\n        if (fileList[0]?.url && confirmDeletion) {\n            setAjxRequesting(true);\n            service.saveFromCSVUrl({ url: fileList[0]?.url, transactionType }, { dataType }).then((res) => {\n                AntdMsg(res.message);\n                list();\n                setOpen(false);\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        }\n    }\n\n    useEffect(() => {\n        if (fileList[0]?.url) {\n            service.checkPrevTransation({ url: fileList[0]?.url, transactionType }, { dataType }).then(res => {\n                if (res.data.alreadyExistedDataDates?.length > 0) {\n                    confirmDeletionModal(res.data.alreadyExistedDataDates);\n                } else {\n                    message.success(res.message);\n                    setConfirmDeletion(true);\n                }\n            }).catch(err => {\n                message.warning(err.message);\n            })\n        }\n    }, [fileList])\n\n    const confirmDeletionModal = (alreadyExistedDataDates) => {\n        Modal.confirm({\n            title: 'Records Already exists',\n            icon: <ExclamationCircleFilled />,\n            content: <>\n                <p>Records will be deleted on these dates </p>\n                {\n                    alreadyExistedDataDates.map((v, i) => (<Tag color=\"red\" key={i}>{v}</Tag>))\n                }\n            </>,\n            okText: 'Delete Records',\n            okType: 'danger',\n            cancelText: 'Cancel',\n            onOk() {\n                setConfirmDeletion(true);\n            },\n            onCancel() { },\n        })\n    }\n\n    return (\n        <>\n            <Modal\n                title=\"Upload File (CSV)\"\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onCancel={() => { setOpen(false); }}\n                maskClosable={false}\n                width={400}\n                destroyOnClose\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save} disabled={!confirmDeletion || ajxRequesting}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <UploadCSV {...{ fileList, setFileList }} count={1} />\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import React from \"react\";\nimport { Card, Layout, Menu } from \"antd\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Error404 from \"../pages/errors/Error404\";\nimport commonObj from \"../../commonObj\";\nimport Report from \"../pages/Report\";\nimport Account from \"../pages/Account\";\nimport Transaction from \"../pages/Transaction\";\n\n\nexport default function MyLayout() {\n\n    return (\n        <>\n            <Layout style={{ minHeight: '100vh', }}>\n                <Layout className=\"site-layout\" >\n                    <Layout.Header style={{ padding: 0, height: 'auto' }} >\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\n                            {\n                                label: 'Bill Report',\n                                key: 'bill-report/',\n                                children: [\n                                    {\n                                        label: <Link to={'bill-report'}>Bill Report</Link>,\n                                        key: \"bill-report\"\n                                    },\n                                    {\n                                        label: <Link to={'/bill-report/receipt-transaction'}>Receipt Transactions</Link>,\n                                        key: \"/bill-report/receipt-transaction\"\n                                    },\n                                    {\n                                        label: <Link to={'/bill-report/sales-transaction'}>Sales Transactions</Link>,\n                                        key: \"/bill-report/sales-transaction\"\n                                    },\n                                    {\n                                        label: <Link to={'bill-report/accounts'}>Accounts</Link>,\n                                        key: \"bill-report/accounts\"\n                                    },\n                                ]\n                            },\n                            {\n                                label: 'Sale Report',\n                                key: 'sale-report/',\n                                children: [\n                                    {\n                                        label: <Link to={'sale-report'}>Sale Report</Link>,\n                                        key: \"sale-report\"\n                                    },\n                                    {\n                                        label: <Link to={'/sale-report/receipt-transaction'}>Receipt Transactions</Link>,\n                                        key: \"/sale-report/receipt-transaction\"\n                                    },\n                                    {\n                                        label: <Link to={'/sale-report/sales-transaction'}>Sales Transactions</Link>,\n                                        key: \"/sale-report/sales-transaction\"\n                                    },\n                                    {\n                                        label: <Link to={'sale-report/accounts'}>Accounts</Link>,\n                                        key: \"sale-report/accounts\"\n                                    },\n                                ]\n                            },\n\n                            {\n                                label: commonObj?.name ? commonObj.name : 'You',\n                                key: 'profile',\n                                children: [\n                                    {\n                                        key: 'Profile',\n                                        label: 'Profile',\n                                    },\n                                    {\n                                        key: 'Logout',\n                                        danger: true,\n                                        label: 'Logout',\n                                        onClick: () => { window.localStorage.clear(); window.location.reload(); }\n                                    }\n                                ]\n                            }\n                        ]}>\n                        </Menu>\n                    </Layout.Header>\n\n                    <Layout.Content>\n                        <Card style={{ borderRadius: \"none\" }}>\n                            <Routes>\n                                <Route path=\"bill-report/\" element={<Report dataType=\"bill\" />} />\n                                <Route path=\"bill-report/accounts\" element={<Account dataType=\"bill\" />} />\n                                <Route path=\"bill-report/receipt-transaction\" element={<Transaction transactionType=\"credit\" dataType=\"bill\" />} />\n                                <Route path=\"bill-report/sales-transaction\" element={<Transaction transactionType=\"debit\" dataType=\"bill\" />} />\n                                <Route path=\"sale-report/\" element={<Report dataType=\"sale\" />} />\n                                <Route path=\"sale-report/accounts\" element={<Account dataType=\"sale\" />} />\n                                <Route path=\"sale-report/receipt-transaction\" element={<Transaction transactionType=\"credit\" dataType=\"sale\" />} />\n                                <Route path=\"sale-report/sales-transaction\" element={<Transaction transactionType=\"debit\" dataType=\"sale\" />} />\n                                <Route path={'*'} element={<Error404 />} />\n                            </Routes>\n                        </Card>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","this","baseURL","params","id","ids","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","AntdMsg","$msg","$type","message","AccountTransaction","accountId","useState","setData","loading","setLoading","selected","setSelected","addNewModalRef","useRef","columns","width","render","v","row","i","dataIndex","moment","format","transactionType","toFixed","bal","previousCreditAmount","previousDebitAmount","color","onConfirm","deleteData","_id","okText","cancelText","size","danger","icon","DeleteOutlined","EditOutlined","onClick","openForm","filter","item","hidden","list","listLedger","then","res","map","key","catch","err","finally","tableColumns","ellipsis","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","level","style","margin","pagination","position","dataSource","scroll","y","x","AddForm","ref","onSubmitCapture","className","gutter","span","marginBottom","e","startTime","Date","endTime","htmlType","float","forwardRef","open","setOpen","aspect","ajxRequesting","setAjxRequesting","handleChange","value","Object","entries","forEach","ent","varDt","k","keys","split","parseInt","useImperativeHandle","dt","date","save","detail","console","log","top","onOk","okButtonProps","disabled","onCancel","maskClosable","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","placeholder","min","amount","target","billNumber","accountRecievable","dayjs","BillingReport","dataType","accounts","setAccounts","transactionModalRef","name","reduce","acc","cv","r","editable","tooltip","remarks","updateRemarks","comment","EyeOutlined","listBillReport","serviceAccount","isAll","expandable","rowExpandable","record","expandedRowRender","display","flexDirection","previousCreditTransactions","align","includes","TransactionModal","showSearch","allowClear","optionFilterProp","filterOption","input","option","toLowerCase","options","startDate","endDate","destroyOnClose","Account","_","marginRight","defaultValue","initialAmount","url","config","UploadAudio","fileList","setFileList","count","uploadImage","onSuccess","onError","file","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","accept","customRequest","fl","onRemove","listType","onPreview","fetch","method","json","thumbnail","UploadOutlined","Transaction","uploadCsvModalRef","UploadCsvModal","accountList","setAccountList","confirmDeletion","setConfirmDeletion","checkPrevTransation","alreadyExistedDataDates","confirmDeletionModal","Modal","ExclamationCircleFilled","content","okType","saveFromCSVUrl","MyLayout","minHeight","padding","height","theme","mode","items","children","commonObj","window","localStorage","clear","location","reload","borderRadius","path","element"],"sourceRoot":""}